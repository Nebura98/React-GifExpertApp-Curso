{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","onChange","target","value","prototype","PropTypes","func","isRequired","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","catch","console","log","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAO,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,YAAeT,EACfU,SAjBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOC,aAsB/Bf,EAAYgB,UAAW,CACnBD,M,OAASE,EAAUC,KAAKC,Y,mCC9BfC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCERO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACnC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZnB,mBAAS,CAC/B0B,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAZAC,qBAAW,WACPxB,EAASC,GACRwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,OAGhBM,MAAMC,QAAQC,OAChB,CAAC5B,IAEGqB,EDjB0BQ,CAAa7B,GAAjCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SACI,6BAEIH,EAAOJ,KAAI,SAAAqB,GAAG,OACV,cAAC,EAAD,eAEQA,GADEA,EAAInB,eEQvBoB,EAvBM,WAAO,IAAD,EAEWlD,mBAAS,CAAC,kBAFrB,mBAElBmD,EAFkB,KAENpD,EAFM,KAIzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEIoD,EAAWvB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADHA,YCXrBiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.318b445a.chunk.js","sourcesContent":["import React ,{useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputAdd = (e) => {\r\n        setinputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //Para prevenir tener que recargar el formulario cada vez que se actulice.\r\n        if ( inputValue.trim().length>2){\r\n            setCategories( cats => [inputValue,...cats])\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type = 'text'\r\n                placeholder = {inputValue}\r\n                onChange = {handleInputAdd}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.prototype= {\r\n    value :  PropTypes.func.isRequired\r\n};","export const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YFVtBzT7o1e5Wrr1BnKan9pdTugv6FDW`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        };\r\n    })\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    return (\r\n        <div className=\"card  animate__animated animate__bounce\">\r\n            <img src= {url}  alt= {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__slideOutUp\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n\r\n)\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifts } from '../helpers/getGifs';\r\n// Esto es un custom hook\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // Esto permite que el componente se renderice por primera vez o cuando se agrege una nueva categoria.\r\n    useEffect( ()=> {\r\n        getGifts(category)\r\n        .then(imgs => {\r\n           \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n        .catch(console.log)\r\n    }, [category]) //Segundo parametros es un arreglo de dependencias.\r\n\r\n    return state; // {data:[],loading:true}\r\n}\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One punch man'])\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid \r\n              key = {category} \r\n              category={category}/>\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n  \r\n  \r\nexport default GifExpertApp;","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// Componente GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr>\n\n"],"sourceRoot":""}